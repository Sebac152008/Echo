<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>